// <auto-generated />
using System;
using EVS358;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace EVS358.Migrations
{
    [DbContext(typeof(PropertyHubContext))]
    partial class PropertyHubContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.11-servicing-32099")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("EVS358.Address", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CityId");

                    b.Property<string>("StreetAddress")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<int>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Address");
                });

            modelBuilder.Entity("EVS358.City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<int>("ProvinceId");

                    b.HasKey("Id");

                    b.HasIndex("ProvinceId");

                    b.ToTable("Cities");
                });

            modelBuilder.Entity("EVS358.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Code");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Countries");
                });

            modelBuilder.Entity("EVS358.PropertyHub.AdvStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("AdvStatus");
                });

            modelBuilder.Entity("EVS358.PropertyHub.AdvType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("AdvTypes");
                });

            modelBuilder.Entity("EVS358.PropertyHub.AreaUnit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.HasKey("Id");

                    b.ToTable("AreaUnits");
                });

            modelBuilder.Entity("EVS358.PropertyHub.Neighborhood", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CityId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("ParentId");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.HasIndex("ParentId");

                    b.ToTable("Neighborhoods");
                });

            modelBuilder.Entity("EVS358.PropertyHub.PropertyAdv", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AdvStatusId");

                    b.Property<int>("AdvTypeId");

                    b.Property<int>("Baths");

                    b.Property<int>("Beds");

                    b.Property<bool>("IsActive");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<int>("NeighborhoodId");

                    b.Property<int>("PostedById");

                    b.Property<DateTime>("PostedOn");

                    b.Property<float>("Price");

                    b.Property<int>("PropertyTypeId");

                    b.Property<DateTime>("StartOn");

                    b.HasKey("Id");

                    b.HasIndex("AdvStatusId");

                    b.HasIndex("AdvTypeId");

                    b.HasIndex("NeighborhoodId");

                    b.HasIndex("PostedById");

                    b.HasIndex("PropertyTypeId");

                    b.ToTable("PropertyAdvs");
                });

            modelBuilder.Entity("EVS358.PropertyHub.PropertyAdvsFeatures", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AdvertisementId");

                    b.Property<int>("FeatureId");

                    b.Property<int?>("PropertyAdvId");

                    b.HasKey("Id");

                    b.HasIndex("AdvertisementId");

                    b.HasIndex("FeatureId");

                    b.HasIndex("PropertyAdvId");

                    b.ToTable("PropertyAdvsFeatures");
                });

            modelBuilder.Entity("EVS358.PropertyHub.PropertyArea", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("PropertyAdvId");

                    b.Property<int?>("UnitId");

                    b.Property<int>("Value");

                    b.HasKey("Id");

                    b.HasIndex("PropertyAdvId")
                        .IsUnique();

                    b.HasIndex("UnitId");

                    b.ToTable("PropertyArea");
                });

            modelBuilder.Entity("EVS358.PropertyHub.PropertyFeature", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(300)");

                    b.HasKey("Id");

                    b.ToTable("PropertyFeatures");
                });

            modelBuilder.Entity("EVS358.PropertyHub.PropertyImage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Caption")
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime>("DateCreated");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("varchar(300)");

                    b.Property<int>("Priority");

                    b.Property<int?>("PropertyAdvId");

                    b.HasKey("Id");

                    b.HasIndex("PropertyAdvId");

                    b.ToTable("PropertyImage");
                });

            modelBuilder.Entity("EVS358.PropertyHub.PropertyType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("PropertyTypes");
                });

            modelBuilder.Entity("EVS358.Province", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CountryId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.ToTable("Provinces");
                });

            modelBuilder.Entity("EVS358.UsersMgt.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("EVS358.UsersMgt.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("BirthDate");

                    b.Property<string>("ContactNumber")
                        .HasColumnType("varchar(15)");

                    b.Property<string>("Email")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("varchar(255)");

                    b.Property<bool?>("IsActive");

                    b.Property<string>("LoginId")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.Property<int>("RoleId");

                    b.Property<string>("SecurityAnswer")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("SecurityQuestion")
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("EVS358.Address", b =>
                {
                    b.HasOne("EVS358.City", "City")
                        .WithMany()
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("EVS358.UsersMgt.User")
                        .WithOne("Address")
                        .HasForeignKey("EVS358.Address", "UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("EVS358.City", b =>
                {
                    b.HasOne("EVS358.Province", "Province")
                        .WithMany()
                        .HasForeignKey("ProvinceId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("EVS358.PropertyHub.Neighborhood", b =>
                {
                    b.HasOne("EVS358.City", "City")
                        .WithMany()
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("EVS358.PropertyHub.Neighborhood", "Parent")
                        .WithMany()
                        .HasForeignKey("ParentId");
                });

            modelBuilder.Entity("EVS358.PropertyHub.PropertyAdv", b =>
                {
                    b.HasOne("EVS358.PropertyHub.AdvStatus", "AdvStatus")
                        .WithMany()
                        .HasForeignKey("AdvStatusId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("EVS358.PropertyHub.AdvType", "AdvType")
                        .WithMany()
                        .HasForeignKey("AdvTypeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("EVS358.PropertyHub.Neighborhood", "Neighborhood")
                        .WithMany()
                        .HasForeignKey("NeighborhoodId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("EVS358.UsersMgt.User", "PostedBy")
                        .WithMany()
                        .HasForeignKey("PostedById")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("EVS358.PropertyHub.PropertyType", "PropertyType")
                        .WithMany()
                        .HasForeignKey("PropertyTypeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("EVS358.PropertyHub.PropertyAdvsFeatures", b =>
                {
                    b.HasOne("EVS358.PropertyHub.PropertyAdv", "Advertisement")
                        .WithMany()
                        .HasForeignKey("AdvertisementId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("EVS358.PropertyHub.PropertyFeature", "Feature")
                        .WithMany()
                        .HasForeignKey("FeatureId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("EVS358.PropertyHub.PropertyAdv")
                        .WithMany("Features")
                        .HasForeignKey("PropertyAdvId");
                });

            modelBuilder.Entity("EVS358.PropertyHub.PropertyArea", b =>
                {
                    b.HasOne("EVS358.PropertyHub.PropertyAdv")
                        .WithOne("Area")
                        .HasForeignKey("EVS358.PropertyHub.PropertyArea", "PropertyAdvId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("EVS358.PropertyHub.AreaUnit", "Unit")
                        .WithMany()
                        .HasForeignKey("UnitId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("EVS358.PropertyHub.PropertyImage", b =>
                {
                    b.HasOne("EVS358.PropertyHub.PropertyAdv")
                        .WithMany("Images")
                        .HasForeignKey("PropertyAdvId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("EVS358.Province", b =>
                {
                    b.HasOne("EVS358.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("EVS358.UsersMgt.User", b =>
                {
                    b.HasOne("EVS358.UsersMgt.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
